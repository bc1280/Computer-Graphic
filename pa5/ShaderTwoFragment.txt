precision highp float;
uniform float time;
uniform vec2 resolution;
varying vec3 fPosition;
varying vec3 fNormal;
varying vec3 uPos;

void main()
{
  float xs = uPos.z*10.0 - floor(uPos.x*10.0);
  float ys = uPos.z*10.0 - floor(uPos.y*10.0);
  float zs = uPos.z*10.0 - floor(uPos.z*10.0);
  
  float zc = smoothstep(.6,.7,zs);
  
  vec3 dirA = vec3(sin(time),1,cos(time));
  vec3 dirD = vec3(1,1,zc);

  float ambient = pow(dot(uPos,dirA),2.0);
  float diffuse = pow(dot(fNormal,dirD),2.0);
 
  vec3 colA = ambient * vec3(1.0,0.8,0.6);
  vec3 colD = diffuse * vec3(1.0,0.7,0.6);
  
  if(sin(50.0*uPos.z)>0.75) discard;
  if(sin(50.0*uPos.z)<0.2) colD *= vec3(1,1,1);
  if(sin(50.0*uPos.z)>0.4) colA *= vec3(0.3,0.4,0.4);

  gl_FragColor = vec4(colA+colD, 1.0);
}